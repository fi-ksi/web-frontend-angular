openapi: 3.0.2
info:
  title: EduLint web API
  # description: "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.\
  #   \  You can find out more about\nSwagger at [http://swagger.io](http://swagger.io).\
  #   \ In the third iteration of the pet store, we've switched to the design first\
  #   \ approach!\nYou can now help us improve the API whether it's by making changes\
  #   \ to the definition itself or to the code.\nThat way, with time, we can improve\
  #   \ the API in general, and expose some of the new features in OAS3.\n\nSome useful\
  #   \ links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n\
  #   - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)"
  # termsOfService: http://swagger.io/terms/
  contact:
    email: contact@edulint.com
  # license:
  #   name: Apache 2.0
  #   url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1
# externalDocs:
#   description: Find out more about Swagger
#   url: http://swagger.io
servers:
  - url: "https://edulint.com"
  - url: "https://dev.edulint.com"
tags:
  - name: API
    description: ""
    # externalDocs:
    #   description: Find out more
    #   url: http://swagger.io
  - name: Web
    description: ""
    # externalDocs:
    #   description: Find out more about our store
    #   url: http://swagger.io
paths:
  /api/:
    get:
      summary: This API documentation.
      responses:
        "200":
          description: ""
  /api/versions:
    get:
      summary: List of currently supported Edulint versions.
      responses:
        "200":
          description: Different EduLint versions are currently not supported. Endpoint returns only "latest".
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example: ["latest"]

  /api/code:
    post:
      tags:
        - API
      summary: Uploads some code
      # description: Update an existing pet by Id
      # operationId: updatePet
      requestBody:
        description: information on the code to upload
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CodeRequest"
          # application/xml:
          #   schema:
          #     $ref: "#/components/schemas/Pet"
          # application/x-www-form-urlencoded:
          #   schema:
          #     $ref: "#/components/schemas/Pet"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            # application/xml:
            #   schema:
            #     $ref: "#/components/schemas/Pet"
            application/json:
              schema:
                $ref: "#/components/schemas/Hash"
        "400":
          description: Missing parameter with uploaded code
      # security:
      # - petstore_auth:
      #   - write:pets
      #   - read:pets
  /api/code/{hash}:
    get:
      tags:
        - API
      summary: Retrieves the code with the given hash
      parameters:
        - name: hash
          in: path
          description: hash of the code to return
          required: true
          schema:
            $ref: "#/components/schemas/HashStr"
      responses:
        "200":
          description: successful operation
          content:
            # application/xml:
            #   schema:
            #     $ref: '#/components/schemas/Pet'
            # application/json:
            #   schema:
            #     $ref: '#/components/schemas/Pet'
            text/plain:
              schema:
                $ref: "#/components/schemas/CodeFile"
        "400":
          description: Invalid hash supplied
        "404":
          description: Code not found
  /api/{version}/analyze/{hash}:
    get:
      tags:
        - API
      summary: Analyzes the code with the given hash with the given version of EduLint
      operationId: analyzeUploaded
      parameters:
        - name: version
          in: path
          description: The version of EduLint to use. Currently, you can only use "latest".
          required: true
          schema:
            type: string
            example: latest
        - name: hash
          in: path
          description: the hash of the code to analyze
          required: true
          schema:
            $ref: "#/components/schemas/HashStr"
        - name: config
          in: query
          description: extra configuration to use (equivalent to command line configuration described in [EduLint's documentation](https://edulint.rtfd.io#configuration)).
          required: false
          schema:
            $ref: "#/components/schemas/QueryConfig"
        - name: use-cached-result
          in: query
          description: enables/disables using cached linting results
          required: false
          schema:
            $ref: "#/components/schemas/TrueBoolean"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyzeResponse"
        "400":
          description: Invalid hash supplied
        "404":
          description: Code or version not found
  /api/{version}/analyze:
    post:
      tags:
        - API
      summary: Uploads some code and returns its analysis
      description: This endpoint combines the /code and /api/{version}/analyze/{hash} endpoints.
      parameters:
        - name: version
          in: path
          description: The version of EduLint to use. Currently, you can only use "latest".
          required: true
          schema:
            type: string
            example: latest
        - name: config
          in: query
          description: extra configuration to use (equivalent to command line configuration described in [EduLint's documentation](https://edulint.rtfd.io#configuration)).
          required: false
          schema:
            $ref: "#/components/schemas/QueryConfig"
        - name: use-cached-result
          in: query
          description: enables/disables using cached linting results
          required: false
          schema:
            $ref: "#/components/schemas/TrueBoolean"
      requestBody:
        description: the code to upload and analyze
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CodeRequest"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyzeResponse"
        "400":
          description: Invalid hash supplied
        "404":
          description: Code or version not found
  /editor/{hash}:
    get:
      tags:
        - Web
      summary: Displays the UI with prefilled code
      parameters:
        - name: hash
          in: path
          description: the hash of the code to display
          required: true
          schema:
            $ref: "#/components/schemas/HashStr"
      responses:
        "200":
          description: successful operation, HTML with JS for user

components:
  schemas:
    CodeRequest:
      type: object
      properties:
        code:
          type: string
          example: print('Hello world')
        source_id:
          type: string
          example: ksi:task_99:user_aa554ae56217f
      required: [code]
    CodeFile:
      type: string
      format: binary
      example: print('Hello world')
    HashStr:
      type: string
      example: a10b77b1feed3225cceb4b765068965ea482abfc618eee849259f7d1401cd09d
    Hash:
      type: object
      properties:
        hash:
          $ref: "#/components/schemas/HashStr"
    Problem:
      type: object
      properties:
        path:
          type: string
          example: codes/a10b77b1feed3225cceb4b765068965ea482abfc618eee849259f7d1401cd09d.py
        source:
          type: string
          example: pylint
        code:
          type: string
          example: R6201
        symbol:
          type: string
          nullable: true
          example: simplifiable-if-return
        text:
          type: string
          example: The if statement can be replaced with 'return ch == 'a' or ch == 'A''
        line:
          type: integer
          example: 4
        end_line:
          type: integer
          nullable: true
          example: 7
        column:
          type: integer
          example: 4
        end_column:
          type: integer
          nullable: true
          example: 20
    Problems:
      type: array
      items:
        $ref: "#/components/schemas/Problem"
    ConfigError:
      type: string
      example: unrecognized option foo
    AnalyzeResponse:
      type: object
      properties:
        problems:
          $ref: "#/components/schemas/Problems"
        config_errors:
          type: array
          items:
            $ref: "#/components/schemas/ConfigError"
        hash:
          $ref: "#/components/schemas/HashStr"
    QueryConfig:
      type: string
      example: config-file=cs0
    TrueBoolean:
      type: boolean
      enum: [true, false]
      default: true
